A sophisticated query tool for exploring, analyzing, and retrieving complex information from the qualitative research knowledge graph.

When to use this tool:
- Retrieving a comprehensive view of your entire research knowledge structure
- Searching for specific research entities across your qualitative data corpus
- Getting detailed information about particular research projects, participants, or analytical elements
- Exploring relationships between research components (codes, themes, quotes)
- Analyzing code frequencies and distributions across your data
- Retrieving interview or observation transcripts for analysis
- Accessing memo content for reflection on the research process
- Generating codebooks or analytical frameworks for documentation
- Finding connections between different aspects of your research
- Creating research reports or summaries from your data
- Exploring thematic structures and their evidentiary basis
- Identifying entities by status to track research progress
- Filtering tasks by priority to manage research workflow
- Analyzing sequential relationships between research processes

Key features:
- Offers specialized operations for querying different aspects of qualitative research data
- Retrieves complete or filtered views of the research knowledge graph
- Provides flexible search capabilities across all research entities
- Supports detailed exploration of specific entities by name
- Generates specialized views for projects, participants, codes, and themes
- Retrieves content and metadata for interviews, transcripts, and memos
- Creates codebooks and thematic frameworks for documentation
- Identifies related entities to explore connections within your research
- Returns consistently structured JSON responses for easy processing
- Facilitates depth and breadth exploration of qualitative data
- Supports status-based filtering of research entities
- Enables priority-based task management
- Provides sequential process analysis capabilities

Parameters explained:
1. type: The type of query operation to perform
  - Accepts one of the specialized operations: "graph", "search", "nodes", "project", "participant", "codes", "themes", "transcript", "memo", "analysis", "codebook", "related", "status", "priority", "sequence"
  - Determines how the params parameter is interpreted 
2. params: Operation-specific parameters (structure varies by type):
  - For "graph": No parameters needed (retrieves the full research knowledge graph)
  - For "search": Object containing:
    * query: Search string to find entities (supports entity type filters)
  - For "nodes": Object containing:
    * names: Array of entity names to retrieve
  - For "project": Object containing:
    * projectName: Name of the project to retrieve details for
  - For "participant": Object containing:
    * participantName: Name of the participant to retrieve profile for
  - For "codes": Object containing:
    * projectName: (Optional) Project name to filter codes by
  - For "themes": Object containing:
    * projectName: (Optional) Project name to filter themes by
  - For "transcript": Object containing:
    * participantName: Participant associated with the transcript
    * interviewId: (Optional) Specific interview identifier
  - For "memo": Object containing:
    * memoName: Name of the memo to retrieve
  - For "analysis": Object containing:
    * projectName: Project name to retrieve analysis artifacts for
  - For "codebook": Object containing:
    * projectName: Project name to generate codebook for
  - For "related": Object containing:
    * entityName: Name of the entity to find related entities for
  - For "status": Object containing:
    * statusValue: The status value to filter by (e.g., "planning", "data_collection", "analysis")
  - For "priority": Object containing:
    * priorityValue: The priority value to filter by (e.g., "high", "low")
  - For "sequence": Object containing:
    * entityName: Name of the entity to find sequential relationships for

Operation details:
- graph: Returns the complete research knowledge graph with all entities and relationships
- search: Performs text-based search across entity names and observations
- nodes: Retrieves detailed information about specific entities by name
- project: Returns comprehensive project information including participants, interviews, codes, and findings
- participant: Generates a participant profile with demographic information and associated data
- codes: Lists all codes, optionally filtered by project, with reference counts and descriptions
- themes: Returns all themes, optionally filtered by project, with associated codes and descriptions
- transcript: Retrieves interview transcript content for specific participant/interview combinations
- memo: Returns the full content of an analytical memo with metadata
- analysis: Collects all analysis artifacts (codes, themes, memos) for a specific project
- codebook: Generates a structured codebook for a project with code definitions and examples
- related: Identifies all entities directly connected to a specific entity
- status: Retrieves all entities with a specific status value
- priority: Retrieves all entities with a specific priority value
- sequence: Identifies sequential relationships for a specific entity showing preceding and following entities

Status and Priority Information:
- Status queries return entities organized by their current research stage
- Priority queries help identify critical research tasks and elements
- Status values include: planning, data_collection, analysis, writing, complete, scheduled, conducted, transcribed, coded, analyzed, emerging, developing, established, preliminary, draft, final, active, in_progress
- Priority values include: high, low

Sequential Process Information:
- Sequence queries identify entities that come before or after in a research process
- Sequential relationships help visualize the research workflow
- The sequence operation shows both incoming and outgoing precedes relations

Return information:
- JSON response with a consistent structure:
  - success: Boolean indicating whether the operation succeeded
  - Additional fields depend on the operation type:
    * graph: Complete knowledge graph
    * results: For search operations
    * nodes: For specific entity retrieval
    * project/participant/etc.: For specialized views
    * status/priority: Lists of entities with specified status/priority values
    * sequence: Preceding and following entities in research processes
- Error information when operations fail

You should:
- Start with broad queries ("graph", "search") to explore your research corpus
- Use specific entity queries ("nodes", "project", "participant") for detailed information
- Combine search and related queries to discover connections in your data
- Generate codebooks and project overviews for documentation and reporting
- Use transcript retrieval to access primary data when needed
- Explore thematic structures through themes and related entity queries
- Review memos to track your analytical process over time
- Filter code and theme queries by project for more focused results
- Use search with entity type filters to find specific types of research elements
- Use status queries to identify all entities at a particular research stage
- Use priority queries to focus on high-priority research tasks
- Use sequence queries to understand process flows in your research methodology 